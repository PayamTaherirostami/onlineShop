/* Hide the default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
   }
   
   .container {
    /* border: 1px solid red; */
    background-color: transparent;
    max-height: 20px;
    display: block;
    position: relative;
    cursor: pointer;
    font-size: 25px;
    user-select: none;
   }
   
   /* Create a custom checkbox */
   .checkmark {
    position: relative;
    top: 0;
    left: 0;
    height: 1.3em;
    width: 1.3em;
    background: white;
    border:5px ridge orange;
    border-radius: 50px;
    transition: all 0.7s;
    --spread: 20px;
    
   }
   
   /* When the checkbox is checked, add a blue background */
   .container input:checked ~ .checkmark {
    background: black;
    box-shadow: -10px -10px var(--spread) 0px #5B51D8, 0 -10px var(--spread) 0px #833AB4, 10px -10px var(--spread) 0px #E1306C, 10px 0 var(--spread) 0px #FD1D1D, 10px 10px var(--spread) 0px #F77737, 0 10px var(--spread) 0px #FCAF45, -10px 10px var(--spread) 0px #FFDC80;
   }
   
   /* Create the checkmark/indicator (hidden when not checked) */
   .checkmark:after {
    content: "";
    position: absolute;
    display: none;
   }
   
   /* Show the checkmark when checked */
   .container input:checked ~ .checkmark:after {
    display: block;
   }
   
   /* Style the checkmark/indicator */
   .container .checkmark:after {
    left: 0.45em;
    top: 0.25em;
    width: 0.25em;
    height: 0.5em;
    border: solid #f0f0f0;
    border-width: 0 0.15em 0.15em 0;
    transform: rotate(45deg);
   }
   .ü§ö {
    --skin-color: #E4C560;
    --tap-speed: 0.6s;
    --tap-stagger: 0.1s;
    position: relative;
    width: 80px;
    height: 60px;
    margin-left: 100px;
  }
  
  .ü§ö:before {
    content: '';
    display: block;
    width: 180%;
    height: 75%;
    position: absolute;
    top: 70%;
    right: 20%;
    background-color: black;
    border-radius: 40px 10px;
    filter: blur(10px);
    opacity: 0.3;
  }
  
  .üå¥ {
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background-color: var(--skin-color);
    border-radius: 10px 40px;
  }
  
  .üëç {
    position: absolute;
    width: 120%;
    height: 38px;
    background-color: var(--skin-color);
    bottom: -18%;
    right: 1%;
    transform-origin: calc(100% - 20px) 20px;
    transform: rotate(-20deg);
    border-radius: 30px 20px 20px 10px;
    border-bottom: 2px solid rgba(0, 0, 0, 0.1);
    border-left: 2px solid rgba(0, 0, 0, 0.1);
  }
  
  .üëç:after {
    width: 20%;
    height: 60%;
    content: '';
    background-color: rgba(255, 255, 255, 0.3);
    position: absolute;
    bottom: -8%;
    left: 5px;
    border-radius: 60% 10% 10% 30%;
    border-right: 2px solid rgba(0, 0, 0, 0.05);
  }
  
  .üëâ {
    position: absolute;
    width: 80%;
    height: 35px;
    background-color: var(--skin-color);
    bottom: 32%;
    right: 64%;
    transform-origin: 100% 20px;
    animation-duration: calc(var(--tap-speed) * 2);
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    transform: rotate(10deg);
  }
  
  .üëâ:before {
    content: '';
    position: absolute;
    width: 140%;
    height: 30px;
    background-color: var(--skin-color);
    bottom: 8%;
    right: 65%;
    transform-origin: calc(100% - 20px) 20px;
    transform: rotate(-60deg);
    border-radius: 20px;
  }
  
  .üëâ:nth-child(1) {
    animation-delay: 0;
    filter: brightness(70%);
    animation-name: tap-upper-1;
  }
  
  .üëâ:nth-child(2) {
    animation-delay: var(--tap-stagger);
    filter: brightness(80%);
    animation-name: tap-upper-2;
  }
  
  .üëâ:nth-child(3) {
    animation-delay: calc(var(--tap-stagger) * 2);
    filter: brightness(90%);
    animation-name: tap-upper-3;
  }
  
  .üëâ:nth-child(4) {
    animation-delay: calc(var(--tap-stagger) * 3);
    filter: brightness(100%);
    animation-name: tap-upper-4;
  }
  
  @keyframes tap-upper-1 {
    0%, 50%, 100% {
      transform: rotate(10deg) scale(0.4);
    }
  
    40% {
      transform: rotate(50deg) scale(0.4);
    }
  }
  
  @keyframes tap-upper-2 {
    0%, 50%, 100% {
      transform: rotate(10deg) scale(0.6);
    }
  
    40% {
      transform: rotate(50deg) scale(0.6);
    }
  }
  
  @keyframes tap-upper-3 {
    0%, 50%, 100% {
      transform: rotate(10deg) scale(0.8);
    }
  
    40% {
      transform: rotate(50deg) scale(0.8);
    }
  }
  
  @keyframes tap-upper-4 {
    0%, 50%, 100% {
      transform: rotate(10deg) scale(1);
    }
  
    40% {
      transform: rotate(50deg) scale(1);
    }
  }
  

  /*Filter styles*/
.saturate { filter: saturate(3); }
.grayscale { filter: grayscale(100%); }
.contrast { filter: contrast(160%); }
.brightness { filter: brightness(0.25); }
.blur { filter: blur(3px); }
.invert { filter: invert(100%); }
.sepia { filter: sepia(100%); }
.huerotate { filter: hue-rotate(180deg); }
.rss.opacity { filter: opacity(50%); }

.ruler-container {
  position: relative;
  cursor: pointer;
}

.ruler {
  height: 20px;
  /* border-left: 1px solid brown;
  border-right: 1px solid brown; */
  
  display: flex;
  justify-content: space-between; /* Spread inch marks evenly */
  padding: 0 5px; /* Add padding to the ruler container */
  position: relative; /* Ensure positioning context for inch labels */
}

.inch-mark {
  position: absolute;
  height: 10px;
  width: 1px;

}

.inch-label {
  position: absolute;
  bottom: -15px;
  font-size: 10px;
  transform: translateX(-50%);
}

.drag-handle {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@media (max-width: 768px) {
  /* Adjust styles for smaller screens */
  .container {
    max-width: 100%;
    float: none;
    clear: both;
  }
  /* Adjust input widths */
  input, select {
    width: 100%;
  }
}
